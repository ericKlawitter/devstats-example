---
# Create a PVC to use for the home directory of the CLI. This way data will be persistent across restarts.
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: cli-pvc
  namespace: devstats-postgres
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: devstats-cli
  namespace: devstats-postgres
  labels:
    app: devstats-cli
spec:
  replicas: 1
  serviceName: postgres-db
  selector:
    matchLabels:
      app: devstats-cli
  template:
    metadata:
      labels:
        app: devstats-cli
    spec:
      containers:
      - name: devstats-image
        image: gcr.io/devstats-gke/devstats:nomount
        command: ["tail", "-f", "/dev/null",]
        env:
        - name: PG_HOST
          value: "postgres-db-0.postgres-db.devstats-postgres.svc.cluster.local"
        - name: PG_DB
          value: "knative"
        - name: PG_PASS
          value: "password"
        - name: PG_PASS_ROLE
          value: "ro_user"
      # Specific to Postgres
        - name: PGHOST
          value: "postgres-db-0.postgres-db.devstats-postgres.svc.cluster.local"
        - name: PGDATABASE
          value: "knative"
        - name: PGUSER
          value: "gha_admin"
        - name: PGPASSWORD
          value: "password"
        - name: GHA2DB_PROJECT
          value: "projects.yaml"
        - name: GHA2DB_REPOS_DIR
          value: "/mount/data/devstats_repos"
          #workingDir: "/mount/data/src/devstats/"
        volumeMounts:
        - mountPath: "/home"
          name: "cli-pvc"
        - mountPath: "/mount/data"
          name: "nfs"
      terminationGracePeriodSeconds: 10
      volumes:
      - name: "cli-pvc"
        persistentVolumeClaim:
          claimName: "cli-pvc"
      - name: "nfs"
        persistentVolumeClaim:
          claimName: "devstats-recreate"

